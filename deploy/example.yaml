apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dump-target
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: dump-target-prometheus
spec:
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
  selector:
    app.kubernetes.io/component: dump-target
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: trimmed-prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: trimmed-prometheus
spec:
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
  selector:
    app.kubernetes.io/component: trimmed-prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: dump-target
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: dump-target-prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app.kubernetes.io/component: trimmed-prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: trimmed-prometheus
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp2
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dump-target
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: dump-target-prometheus
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: dump-target
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: promextractor
  template:
    metadata:
      labels:
        app.kubernetes.io/component: dump-target
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: promextractor
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/input/prometheus
        - --storage.tsdb.retention.time=2y
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        command:
        - /bin/prometheus
        image: docker.io/prom/prometheus:v2.47.2
        name: prometheus
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - mountPath: /input
          name: promdata
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: promdata
        persistentVolumeClaim:
          claimName: dump-target-prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: trimmed-prometheus
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: promextractor
  name: trimmed-prometheus
spec:
  replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: trimmed-prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: promextractor
  template:
    metadata:
      labels:
        app.kubernetes.io/component: trimmed-prometheus
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: promextractor
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/input/prometheus
        - --storage.tsdb.retention.time=2y
        - --web.console.libraries=/usr/share/prometheus/console_libraries
        - --web.console.templates=/usr/share/prometheus/consoles
        command:
        - /bin/prometheus
        image: docker.io/prom/prometheus:v2.47.2
        name: prometheus
        ports:
        - containerPort: 9090
          name: prometheus
        volumeMounts:
        - mountPath: /input
          name: promdata
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: promdata
        persistentVolumeClaim:
          claimName: trimmed-prometheus
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: extractor
    app.kubernetes.io/name: extractor
    app.kubernetes.io/part-of: promextractor
  name: extractor
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: extractor
        app.kubernetes.io/name: extractor
        app.kubernetes.io/part-of: promextractor
    spec:
      containers:
      - command:
        - /app/promextractor
        env:
        - name: FILTER_LABEL_NAME
          value: __name__
        - name: FILTER_LABEL_EXPRESSION
          value: .*my-custom-metric.*
        - name: INPUT_TSDB_PATH
          value: /input/prometheus
        - name: EXISTING_TSDB_PATH
          value: /output/prometheus
        image: quay.io/justinkuli/promextractor:v0.1.0
        name: promextractor
        volumeMounts:
        - mountPath: /input
          name: input
        - mountPath: /output
          name: output
      restartPolicy: Never
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: input
        persistentVolumeClaim:
          claimName: dump-target-prometheus
      - name: output
        persistentVolumeClaim:
          claimName: trimmed-prometheus
